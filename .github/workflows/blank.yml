name: Performance and Security Scanning

on: [push, pull_request]

env:
  TARGET_URL: https://juice-shop.herokuapp.com/
  JMETER_VERSION: 5.6.3
  ZAP_VERSION: 2.12.0

jobs:
  performance-security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # Configurar credenciales de AWS
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    # Instalar Java (requisito para JMeter)
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
    
    - name: Install JMeter
      run: |
        wget https://dlcdn.apache.org/jmeter/binaries/apache-jmeter-${{ env.JMETER_VERSION }}.tgz
        tar -xzvf apache-jmeter-${{ env.JMETER_VERSION }}.tgz
        echo "$PWD/apache-jmeter-${{ env.JMETER_VERSION }}/bin" >> $GITHUB_PATH
    
    - name: Create JMeter Test Plan
      run: |
        cat > performance-test.jmx << EOL
        <?xml version="1.0" encoding="UTF-8"?>
        <jmeterTestPlan version="1.2" properties="5.0" jmeter="${{ env.JMETER_VERSION }}">
          <hashTree>
            <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Performance Test" enabled="true">
              <hashTree>
                <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Load Test" enabled="true">
                  <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
                  <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                    <boolProp name="LoopController.continue_forever">false</boolProp>
                    <intProp name="LoopController.loops">-1</intProp>
                  </elementProp>
                  <stringProp name="ThreadGroup.num_threads">100</stringProp>
                  <stringProp name="ThreadGroup.ramp_time">2</stringProp>
                  <boolProp name="ThreadGroup.scheduler">true</boolProp>
                  <stringProp name="ThreadGroup.duration">300</stringProp>
                </ThreadGroup>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
                    <stringProp name="HTTPSampler.domain">juice-shop.herokuapp.com</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                  </HTTPSamplerProxy>
                </hashTree>
              </hashTree>
            </TestPlan>
          </hashTree>
        </jmeterTestPlan>
        EOL
    
    - name: Run JMeter Performance Tests
      run: |
        jmeter -n -t performance-test.jmx -l performance-results.jtl -f -o jmeter-report
        sudo apt-get update
        sudo apt-get install -y jq
        cat jmeter-report/statistics.json | jq '.' > jmeter-performance-report.json
    
    - name: Install OWASP ZAP
      run: |
        wget https://github.com/zaproxy/zaproxy/releases/download/v${{ env.ZAP_VERSION }}/ZAP_${{ env.ZAP_VERSION }}_Linux.tar.gz
        tar -xzf ZAP_${{ env.ZAP_VERSION }}_Linux.tar.gz
    
    - name: Run OWASP ZAP Security Scan
      run: |
        ./ZAP_${{ env.ZAP_VERSION }}/zap.sh -cmd -quickurl ${{ env.TARGET_URL }} -quickout zap-report.json -owasp
    
    - name: Upload Reports to S3
      run: |
        aws s3 cp jmeter-performance-report.json s3://${{ secrets.S3_BUCKET_NAME }}/performance-reports/jmeter-report-${{ github.sha }}.json
        aws s3 cp zap-report.json s3://${{ secrets.S3_BUCKET_NAME }}/security-reports/zap-report-${{ github.sha }}.json
    
    - name: Check Performance Thresholds
      run: |
        performance_avg=$(jq '.Total.throughput' jmeter-performance-report.json)
        if (( $(echo "$performance_avg < 10" | bc -l) )); then
          echo "Performance test failed: Throughput below threshold"
          exit 1
        fi
    
    - name: Notify on Failure
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: Performance or Security scan failed for ${{ github.repository }}
